{"ast":null,"code":"// medicalAPI.js\n/** Adjust if your Flask route prefix differs. */\nconst BASE = \"http://localhost:8000\";\n\n/** Tiny fetch helper with JSON parsing + friendly errors. */\nasync function request(path, options = {}) {\n  const res = await fetch(`${BASE_URL}${path}`, {\n    method: options.method || 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      ...(options.headers || {})\n    },\n    body: options.body ? JSON.stringify(options.body) : undefined\n  });\n  const text = await res.text();\n  const data = text ? JSON.parse(text) : null;\n  if (!res.ok) {\n    const msg = data && (data.error || data.message) || `HTTP ${res.status}`;\n    throw new Error(`MedicalAPI: ${msg}`);\n  }\n  return data;\n}\n\n/** Get the latest vital readings (HR, BP, temperature, timestamp). */\nexport function getVitals() {\n  return request('/vitals');\n}\n\n/** Trigger random vital changes for testing/animations. */\nexport function simulateVitalChanges() {\n  return request('/simulate', {\n    method: 'POST'\n  });\n}\n\n/** Get a simple health assessment based on current vitals. */\nexport function getHealthStatus() {\n  return request('/status');\n}\n\n/** Fetch the First-Aid protocol text bundle. */\nexport function getFirstAidProtocol() {\n  return request('/first-aid');\n}\nexport default {\n  getVitals,\n  simulateVitalChanges,\n  getHealthStatus,\n  getFirstAidProtocol\n};","map":{"version":3,"names":["BASE","request","path","options","res","fetch","BASE_URL","method","headers","body","JSON","stringify","undefined","text","data","parse","ok","msg","error","message","status","Error","getVitals","simulateVitalChanges","getHealthStatus","getFirstAidProtocol"],"sources":["C:/Users/abdul/Desktop/NASA Hackathon/NASASpaceAppsChallenge/frontend/src/services/medicalAPI.js"],"sourcesContent":["// medicalAPI.js\r\n/** Adjust if your Flask route prefix differs. */\r\nconst BASE = \"http://localhost:8000\";\r\n\r\n/** Tiny fetch helper with JSON parsing + friendly errors. */\r\nasync function request(path, options = {}) {\r\n  const res = await fetch(`${BASE_URL}${path}`, {\r\n    method: options.method || 'GET',\r\n    headers: { 'Content-Type': 'application/json', ...(options.headers || {}) },\r\n    body: options.body ? JSON.stringify(options.body) : undefined,\r\n  });\r\n  const text = await res.text();\r\n  const data = text ? JSON.parse(text) : null;\r\n  if (!res.ok) {\r\n    const msg = (data && (data.error || data.message)) || `HTTP ${res.status}`;\r\n    throw new Error(`MedicalAPI: ${msg}`);\r\n  }\r\n  return data;\r\n}\r\n\r\n/** Get the latest vital readings (HR, BP, temperature, timestamp). */\r\nexport function getVitals() {\r\n  return request('/vitals');\r\n}\r\n\r\n/** Trigger random vital changes for testing/animations. */\r\nexport function simulateVitalChanges() {\r\n  return request('/simulate', { method: 'POST' });\r\n}\r\n\r\n/** Get a simple health assessment based on current vitals. */\r\nexport function getHealthStatus() {\r\n  return request('/status');\r\n}\r\n\r\n/** Fetch the First-Aid protocol text bundle. */\r\nexport function getFirstAidProtocol() {\r\n  return request('/first-aid');\r\n}\r\n\r\nexport default { getVitals, simulateVitalChanges, getHealthStatus, getFirstAidProtocol };\r\n"],"mappings":"AAAA;AACA;AACA,MAAMA,IAAI,GAAG,uBAAuB;;AAEpC;AACA,eAAeC,OAAOA,CAACC,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EACzC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGC,QAAQ,GAAGJ,IAAI,EAAE,EAAE;IAC5CK,MAAM,EAAEJ,OAAO,CAACI,MAAM,IAAI,KAAK;IAC/BC,OAAO,EAAE;MAAE,cAAc,EAAE,kBAAkB;MAAE,IAAIL,OAAO,CAACK,OAAO,IAAI,CAAC,CAAC;IAAE,CAAC;IAC3EC,IAAI,EAAEN,OAAO,CAACM,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACR,OAAO,CAACM,IAAI,CAAC,GAAGG;EACtD,CAAC,CAAC;EACF,MAAMC,IAAI,GAAG,MAAMT,GAAG,CAACS,IAAI,CAAC,CAAC;EAC7B,MAAMC,IAAI,GAAGD,IAAI,GAAGH,IAAI,CAACK,KAAK,CAACF,IAAI,CAAC,GAAG,IAAI;EAC3C,IAAI,CAACT,GAAG,CAACY,EAAE,EAAE;IACX,MAAMC,GAAG,GAAIH,IAAI,KAAKA,IAAI,CAACI,KAAK,IAAIJ,IAAI,CAACK,OAAO,CAAC,IAAK,QAAQf,GAAG,CAACgB,MAAM,EAAE;IAC1E,MAAM,IAAIC,KAAK,CAAC,eAAeJ,GAAG,EAAE,CAAC;EACvC;EACA,OAAOH,IAAI;AACb;;AAEA;AACA,OAAO,SAASQ,SAASA,CAAA,EAAG;EAC1B,OAAOrB,OAAO,CAAC,SAAS,CAAC;AAC3B;;AAEA;AACA,OAAO,SAASsB,oBAAoBA,CAAA,EAAG;EACrC,OAAOtB,OAAO,CAAC,WAAW,EAAE;IAAEM,MAAM,EAAE;EAAO,CAAC,CAAC;AACjD;;AAEA;AACA,OAAO,SAASiB,eAAeA,CAAA,EAAG;EAChC,OAAOvB,OAAO,CAAC,SAAS,CAAC;AAC3B;;AAEA;AACA,OAAO,SAASwB,mBAAmBA,CAAA,EAAG;EACpC,OAAOxB,OAAO,CAAC,YAAY,CAAC;AAC9B;AAEA,eAAe;EAAEqB,SAAS;EAAEC,oBAAoB;EAAEC,eAAe;EAAEC;AAAoB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}